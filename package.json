{
  "name": "vscode-csharp-dependency-graph",
  "displayName": "C# Dependency Graph Generator",
  "description": "Generate dependency graphs for C# projects - Helps visualize project dependencies or classes dependencies in a .NET solution.",
  "version": "0.6.1",
  "publisher": "magic5644",
  "author": {
    "name": "Gildas Le Bournault"
  },
  "engines": {
    "vscode": "^1.98.0"
  },
  "categories": [
    "Visualization",
    "Programming Languages",
    "Other"
  ],
  "galleryBanner": {
    "color": "#000000",
    "theme": "dark"
  },
  "pricing": "Free",
  "activationEvents": [
    "onStartupFinished",
    "onLanguage:dot"
  ],
  "main": "./dist/extension.js",
  "icon": "dist/resources/icon.png",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/magic5644/vscode-csharp-dependency-graph"
  },
  "homepage": "https://github.com/magic5644/vscode-csharp-dependency-graph/main/readme.md",
  "contributes": {
    "commands": [
      {
        "command": "vscode-csharp-dependency-graph.generate-dependency-graph",
        "title": "C#: Generate Dependency Graph"
      },
      {
        "command": "vscode-csharp-dependency-graph.previewGraphviz",
        "title": "Preview Graphviz",
        "icon": {
          "light": "dist/resources/icon-light.svg",
          "dark": "dist/resources/icon-dark.svg"
        }
      },
      {
        "command": "vscode-csharp-dependency-graph.analyze-cycles",
        "title": "C#: Analyze Dependency Cycles"
      },
      {
        "command": "vscode-csharp-dependency-graph.generate-cycle-report",
        "title": "C#: Generate Dependency Cycle Report"
      },
      {
        "command": "vscode-csharp-dependency-graph.open-modern-graph",
        "title": "C#: Open Modern Dependency Graph",
        "category": "C# Dependency Graph",
        "icon": "$(graph-line)"
      },
      {
        "command": "vscode-csharp-dependency-graph.refresh-graph",
        "title": "Refresh Graph",
        "category": "C# Dependency Graph",
        "icon": "$(refresh)"
      },
      {
        "command": "vscode-csharp-dependency-graph.search-nodes",
        "title": "Search Nodes",
        "category": "C# Dependency Graph",
        "icon": "$(search)"
      },
      {
        "command": "vscode-csharp-dependency-graph.export-graph",
        "title": "Export Graph",
        "category": "C# Dependency Graph",
        "icon": "$(export)"
      },
      {
        "command": "vscode-csharp-dependency-graph.zoom-in",
        "title": "Zoom In",
        "category": "C# Dependency Graph",
        "icon": "$(zoom-in)"
      },
      {
        "command": "vscode-csharp-dependency-graph.zoom-out",
        "title": "Zoom Out",
        "category": "C# Dependency Graph",
        "icon": "$(zoom-out)"
      },
      {
        "command": "vscode-csharp-dependency-graph.fit-graph",
        "title": "Fit Graph to View",
        "category": "C# Dependency Graph",
        "icon": "$(screen-full)"
      }
    ],
    "keybindings": [
      {
        "command": "vscode-csharp-dependency-graph.open-modern-graph",
        "key": "ctrl+shift+d ctrl+shift+o",
        "mac": "cmd+shift+d cmd+shift+o",
        "when": "editorTextFocus"
      },
      {
        "command": "vscode-csharp-dependency-graph.refresh-graph",
        "key": "ctrl+shift+d ctrl+shift+r",
        "mac": "cmd+shift+d cmd+shift+r",
        "when": "csharp-dependency-graph.webviewFocus"
      },
      {
        "command": "vscode-csharp-dependency-graph.search-nodes",
        "key": "ctrl+shift+d ctrl+shift+f",
        "mac": "cmd+shift+d cmd+shift+f",
        "when": "csharp-dependency-graph.webviewFocus"
      },
      {
        "command": "vscode-csharp-dependency-graph.export-graph",
        "key": "ctrl+shift+d ctrl+shift+e",
        "mac": "cmd+shift+d cmd+shift+e",
        "when": "csharp-dependency-graph.webviewFocus"
      },
      {
        "command": "vscode-csharp-dependency-graph.zoom-in",
        "key": "ctrl+shift+d ctrl+shift+=",
        "mac": "cmd+shift+d cmd+shift+=",
        "when": "csharp-dependency-graph.webviewFocus"
      },
      {
        "command": "vscode-csharp-dependency-graph.zoom-out",
        "key": "ctrl+shift+d ctrl+shift+-",
        "mac": "cmd+shift+d cmd+shift+-",
        "when": "csharp-dependency-graph.webviewFocus"
      },
      {
        "command": "vscode-csharp-dependency-graph.fit-graph",
        "key": "ctrl+shift+d ctrl+shift+0",
        "mac": "cmd+shift+d cmd+shift+0",
        "when": "csharp-dependency-graph.webviewFocus"
      }
    ],
    "configuration": {
      "title": "C# Dependency Graph",
      "properties": {
        "csharpDependencyGraph.useSolutionFile": {
          "order": 0,
          "type": "boolean",
          "default": true,
          "markdownDescription": "Use **.sln files** when found to identify projects in the solution structure"
        },
        "csharpDependencyGraph.includeNetVersion": {
          "order": 1,
          "type": "boolean",
          "default": true,
          "markdownDescription": "Include **.NET target framework** version in the graph nodes"
        },
        "csharpDependencyGraph.includePackageDependenciesInProjectGraph": {
          "order": 2,
          "type": "boolean",
          "default": false,
          "markdownDescription": "Include **NuGet package dependencies** in the project dependency graph"
        },
        "csharpDependencyGraph.classDependencyColor": {
          "order": 3,
          "type": "string",
          "format": "color",
          "default": "lightgray",
          "markdownDescription": "Color for the classes in class dependency graph.\n\n Colors can be specified in hex format (#RRGGBB) or by name (red, green, blue, lightblue, etc.)"
        },
        "csharpDependencyGraph.packageDependencyColor": {
          "order": 4,
          "type": "string",
          "format": "color",
          "default": "#ffcccc",
          "markdownDescription": "Color for the packages in project dependency graph.\n\n Colors can be specified in hex format (#RRGGBB) or by name (red, green, blue, lightblue, etc.)"
        },
        "csharpDependencyGraph.cyclicDependencyColor": {
          "order": 5,
          "type": "string",
          "format": "color",
          "default": "#FF0000",
          "markdownDescription": "Color for highlighting cyclic dependencies in the graph.\n\n Colors can be specified in hex format (#RRGGBB) or by name (red, green, blue, etc.)"
        },
        "csharpDependencyGraph.excludeTestProjects": {
          "order": 6,
          "type": "boolean",
          "default": true,
          "markdownDescription": "Exclude test projects from the dependency graph"
        },
        "csharpDependencyGraph.openPreviewOnGraphvizFileOpen": {
          "order": 7,
          "type": "boolean",
          "default": true,
          "markdownDescription": "(beta) Open automatically the new Graphviz preview on graphviz file"
        },
        "csharpDependencyGraph.detectCyclicDependencies": {
          "order": 8,
          "type": "boolean",
          "default": true,
          "markdownDescription": "Automatically detect and highlight cyclic dependencies in generated graphs"
        },
        "csharpDependencyGraph.testProjectPatterns": {
          "order": 9,
          "type": "array",
          "default": [
            "*Test*",
            "*Tests*",
            "*TestProject*"
          ],
          "markdownDescription": "Glob patterns to identify test projects to exclude"
        },
        "csharpDependencyGraph.excludeSourcePatterns": {
          "order": 10,
          "type": "array",
          "default": [
            "**/obj/**",
            "**/bin/**",
            "**/Generated/**",
            "**/node_modules/**"
          ],
          "markdownDescription": "Glob patterns for source files to exclude from class dependency analysis"
        },
        "csharpDependencyGraph.modernUI.enabled": {
          "order": 11,
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable modern interactive UI for dependency graphs with enhanced visualization and controls"
        },
        "csharpDependencyGraph.modernUI.notifications.enabled": {
          "order": 12,
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable intelligent notification system with progress tracking and smart queueing"
        },
        "csharpDependencyGraph.modernUI.notifications.cooldownPeriod": {
          "order": 13,
          "type": "number",
          "default": 5000,
          "minimum": 1000,
          "maximum": 60000,
          "markdownDescription": "Cooldown period in milliseconds between similar notifications to prevent spam"
        },
        "csharpDependencyGraph.modernUI.statusBar.enabled": {
          "order": 14,
          "type": "boolean",
          "default": true,
          "markdownDescription": "Show dependency count and cycle indicators in the status bar"
        },
        "csharpDependencyGraph.modernUI.keybindings.enabled": {
          "order": 15,
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable custom keyboard shortcuts for graph navigation and actions"
        },
        "csharpDependencyGraph.modernUI.theme.followVSCode": {
          "order": 16,
          "type": "boolean",
          "default": true,
          "markdownDescription": "Automatically follow VS Code theme (light/dark) for graph visualization"
        }
      }
    },
    "languages": [
      {
        "id": "dot",
        "extensions": [
          ".dot",
          ".gv"
        ],
        "aliases": [
          "Graphviz",
          "DOT"
        ]
      }
    ],
    "viewsContainers": {
      "panel": [
        {
          "id": "csharp-dependency-graph",
          "title": "C# Dependency Graph",
          "icon": "$(graph-line)"
        }
      ]
    },
    "views": {
      "csharp-dependency-graph": [
        {
          "id": "csharp-dependency-graph.modernGraphView",
          "name": "Dependency Graph",
          "when": "csharp-dependency-graph.hasGraph",
          "icon": "$(graph)"
        }
      ]
    },
    "menus": {
      "editor/title": [
        {
          "when": "editorLangId == dot",
          "command": "vscode-csharp-dependency-graph.previewGraphviz",
          "icon": {
            "light": "dist/resources/icon-light.svg",
            "dark": "dist/resources/icon-dark.svg"
          },
          "group": "navigation"
        }
      ],
      "explorer/context": [
        {
          "icon": "$(graph-line)",
          "when": "resourceExtname == .dot || resourceExtname == .gv",
          "command": "vscode-csharp-dependency-graph.analyze-cycles",
          "group": "7_dependency-graph@1"
        },
        {
          "icon": "$(report)",
          "when": "resourceExtname == .dot || resourceExtname == .gv",
          "command": "vscode-csharp-dependency-graph.generate-cycle-report",
          "group": "7_dependency-graph@2"
        }
      ],
      "editor/context": [
        {
          "icon": "$(graph-line)",
          "when": "resourceExtname == .dot || resourceExtname == .gv",
          "command": "vscode-csharp-dependency-graph.analyze-cycles",
          "group": "7_dependency-graph@1"
        },
        {
          "icon": "$(report)",
          "when": "resourceExtname == .dot || resourceExtname == .gv",
          "command": "vscode-csharp-dependency-graph.generate-cycle-report",
          "group": "7_dependency-graph@2"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "clean": "rimraf out dist",
    "build": "npm run clean && npm run compile",
    "package": "webpack --mode production --devtool hidden-source-map",
    "package:vsix": "npm run clean && npm run package && vsce package",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "rimraf out && tsc -p . --outDir out",
    "test": "node ./out/src/test/runTest.js",
    "lint": "eslint src --ext ts",
    "lint-and-test": "npm run lint && npm run test",
    "test-compile": "tsc -p . --outDir out",
    "build:dev": "tsc -p . --outDir out",
    "build:prod": "webpack --mode production --devtool hidden-source-map",
    "check-markdown": "ts-node scripts/markdownSecurityChecker.ts",
    "build:check-markdown": "node scripts/markdownSecurityChecker.js",
    "test:check-markdown": "ts-node scripts/markdownSecurityChecker.ts ./test-workspace"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "^20.14.0",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.98.0",
    "@types/xml2js": "^0.4.14",
    "@typescript-eslint/eslint-plugin": "^6.18.1",
    "@typescript-eslint/parser": "^6.18.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "copy-webpack-plugin": "^13.0.0",
    "css-loader": "^7.1.2",
    "eslint": "^8.56.0",
    "glob": "^11.0.2",
    "mocha": "^11.2.2",
    "rimraf": "^6.0.1",
    "sinon": "^20.0.0",
    "style-loader": "^4.0.0",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.2",
    "webpack": "^5.98.0",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "@hpcc-js/wasm": "^2.22.4",
    "d3": "^7.9.0",
    "d3-graphviz": "^5.6.0",
    "minimatch": "^10.0.1",
    "xml2js": "^0.6.2"
  }
}
